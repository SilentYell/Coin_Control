$main-bg: #F3F4F6;
$secondary: #2C3E50;
$alt-btn: #1ABC9C;
$cta: #E67E22;
$accent: #BDC3C7;
$text-dark: #2C3E50;
$text-light: #fff;

$dashboard-bg: #FCEDD3;
$dashboard-primary: #1E4210;
$dashboard-accent: #E1B000;

.dashboard {
  padding: 1.5rem;
  background-color: $main-bg;
  border-radius: 0.75rem;
  color: $text-dark;
  width: 100%;
  height: 100%;
  // max-width: 1200px;
  margin: 0 auto;

  h1 {
    margin-bottom: 1.5rem;
    text-align: center;
    color: $secondary;
  }

  .layout {
    background-size: 100px 100px;
    position: relative;
  }
}

.layout {
  display: grid;
  gap: 1rem;
  grid-template-columns: repeat(
    auto-fill,
    minmax(300px, 1fr)
  ); /* responsive grid */
  grid-template-rows: auto; /* rows will adjust based on content */
}

// Adjust the dashboard-grid to ensure ResponsiveGridLayout spans the entire width
.dashboard-grid {
  display: block;
  width: 100%; /* Ensure it spans the entire width */
}

/* Resize handle styles */
.react-resizable-handle {
  width: 18px;
  height: 18px;
  border-radius: 50%;
  position: absolute;
  z-index: 20;
}

// Enable all 8 resize handles for react-grid-layout
.react-resizable-handle {
  &.react-resizable-handle-se {
    cursor: se-resize;
    right: 0px;
    bottom: 0px;
  }
  &.react-resizable-handle-sw {
    cursor: sw-resize;
    left: 0px;
    bottom: 0px;
  }
  &.react-resizable-handle-nw {
    cursor: nw-resize;
    left: 0px;
    top: 0px;
  }
  &.react-resizable-handle-ne {
    cursor: ne-resize;
    right: 0px;
    top: 0px;
  }
  &.react-resizable-handle-n {
    cursor: n-resize;
    left: 50%;
    top: 0px;
    transform: translateX(-50%);
  }
  &.react-resizable-handle-s {
    cursor: s-resize;
    left: 50%;
    bottom: 0px;
    transform: translateX(-50%);
  }
  &.react-resizable-handle-e {
    cursor: e-resize;
    right: 0px;
    top: 50%;
    transform: translateY(-50%);
  }
  &.react-resizable-handle-w {
    cursor: w-resize;
    left: 0px;
    top: 50%;
    transform: translateY(-50%);
  }
}

.react-resizable-handle-n,
.react-resizable-handle-s {
  left: 0;
  width: 100%;
  height: 12px;
  min-height: 12px;
  max-height: 16px;
  cursor: n-resize;
  transform: none;
  border-radius: 0;
}

.react-resizable-handle-n {
  top: 0;
}

.react-resizable-handle-s {
  bottom: 0;
}

.react-resizable-handle-e,
.react-resizable-handle-w {
  top: 0;
  height: 100%;
  width: 12px;
  min-width: 12px;
  max-width: 16px;
  cursor: e-resize;
  transform: none;
  border-radius: 0;
}

.react-resizable-handle-e {
  right: 0;
}

.react-resizable-handle-w {
  left: 0;
}

// Placement shadow for react-grid-layout
.react-grid-placeholder {
  background: rgba($dashboard-primary, 0.10); // subtle green shadow
  border: 2px dashed $cta; // orange border
  border-radius: 8px;
  box-shadow: 0 4px 16px rgba($dashboard-primary, 0.15);
  transition: all 0.2s;
  z-index: 10;
}

.dashboard-controls {
  display: flex;
  gap: 1.25rem;
  margin-bottom: 1.5rem;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

.lock-switch {
  display: flex;
  align-items: center;
  width: 70px; // Reduced width for a more compact switch
  height: 44px;
  background: $secondary;
  border-radius: 50px;
  position: relative;
  cursor: pointer;
  border: 2px solid $secondary;
  transition: background 0.2s;
  box-shadow: 0 2px 4px rgba(0,0,0,0.12);
  .switch-icon {
    position: absolute;
    top: 50%;
    left: 18px; // Centered over the circle when locked
    transform: translate(-50%, -50%);
    color: $secondary;
    font-size: 1.3rem;
    z-index: 2;
    transition: left 0.2s, color 0.2s;
    pointer-events: none;
  }
  .switch-icon.lock {
    left: 22px; // Centered over the circle when locked
    color: $secondary;
  }
  .switch-icon.unlock {
    left: 49px; // Centered over the circle when unlocked
    color: $secondary;
  }
  .switch-circle {
    position: absolute;
    top: 4px;
    left: 6px;
    width: 32px;
    height: 32px;
    background: $text-light;
    border-radius: 50%;
    transition: left 0.2s, background 0.2s;
    box-shadow: 0 1px 3px rgba(0,0,0,0.10);
  }
  &.unlocked {
    background: $cta;
    border: 2px solid $cta;
    .switch-circle {
      left: 32px; // Moves to the right, but stays inside the switch
      background: $text-light;
    }
    .switch-icon.lock {
      color: $secondary;
    }
    .switch-icon.unlock {
      color: $secondary;
    }
  }
}

.shine-btn {
  position: relative;
  overflow: hidden;
  color: $text-light;
  border: 2px solid transparent;
  padding: 10px 20px;
  font-size: 15px;
  font-weight: 500;
  cursor: pointer;
  border-radius: 50px;
  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
  transition: background 0.2s, color 0.2s, border 0.2s;
  letter-spacing: 0.3px;
  background: $secondary;

  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(90deg, rgba(255,255,255,0) 0%, rgba(255,255,255,0.2) 50%, rgba(255,255,255,0) 100%);
    transition: left 0.6s ease;
  }
  &.unlocked {
    background: $cta;
    color: $text-light;
    border: 2px solid $secondary;
  }
  &:hover {
    transform: translateY(-2px);
    box-shadow: 0 4px 8px rgba(0,0,0,0.25);
    background: $alt-btn;
    color: $text-dark;
    border: 2px solid $alt-btn;
    &::before {
      left: 100%;
    }
  }
  &:active {
    transform: translateY(1px);
    box-shadow: 0 1px 2px rgba(0,0,0,0.2);
  }
}